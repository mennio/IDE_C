version: "3.11"
# rentrer dans un container worker / api /build-controller > executer > python manage.py createsuperuser
services:

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  pg:
    image: postgres:14-alpine3.18
    environment:
      - POSTGRES_PASSWORD=superpostgres_password
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build:
      dockerfile: Dockerfile
    environment:
      - USE_POSTGRES_DB=true
      - PG_DB_NAME=postgres
      - PG_USERNAME=postgres
      - PG_PASSWORD=superpostgres_password
      - PG_HOST=pg
      - PG_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    command: /bin/sh -c "python manage.py migrate"

  workers:
    build:
      dockerfile: Dockerfile
    environment:
      - USE_POSTGRES_DB=true
      - PG_DB_NAME=postgres
      - PG_USERNAME=postgres
      - PG_PASSWORD=superpostgres_password
      - PG_HOST=pg
      - PG_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    command: /bin/sh -c "celery -A code_builder worker -l INFO"

  api:
    build:
      dockerfile: Dockerfile
    environment:
      - USE_POSTGRES_DB=true
      - PG_DB_NAME=postgres
      - PG_USERNAME=postgres
      - PG_PASSWORD=superpostgres_password
      - PG_HOST=pg
      - PG_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
    ports:
      - "8080:8080"
    command: /bin/sh -c "gunicorn --bind 0.0.0.0:8080 code_builder.wsgi"

  build-controller:
    build:
      dockerfile: Dockerfile
    environment:
      - USE_POSTGRES_DB=true
      - PG_DB_NAME=postgres
      - PG_USERNAME=postgres
      - PG_PASSWORD=superpostgres_password
      - PG_HOST=pg
      - PG_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
    command: /bin/sh -c "python manage.py run_controller"
